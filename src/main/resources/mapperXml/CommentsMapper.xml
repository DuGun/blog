<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CommentsMapper">
  <resultMap id="BaseResultMap" type="bean.Comments">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="reply" jdbcType="LONGVARCHAR" property="reply" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, article_id, time, user_name, email
  </sql>
  <sql id="Blob_Column_List">
    content, reply
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{articleId,jdbcType=BIGINT}
  </select>

  <select id="selectByArticleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where article_id = #{id,jdbcType=BIGINT}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comments
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="bean.Comments">
    insert into comments (id, article_id, time, 
      user_name, email, content, 
      reply)
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP}, 
      #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{reply,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bean.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="reply != null">
        reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bean.Comments">
    update comments
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="bean.Comments">
    update comments
    set article_id = #{articleId,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      reply = #{reply,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bean.Comments">
    update comments
    set article_id = #{articleId,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>